// GENERATED BY ELICIT - DO NOT EDIT

package specs_test

import (
	"mmatt/elicit"
	"testing"
)

func Test_Example_Sub_Spec(t *testing.T) {
	e := elicit.CurrentContext

	e.BeginSpecTest("Example Sub Spec")

	t.Run("A Scenario", func(t *testing.T) {
		e.BeginScenarioTest("A Scenario")

		e.RunStep("Step to run before each scenario")

		e.RunStep("Skipped Step 1")
		e.RunStep("Skipped Step 2")

		if r, l := e.EndScenarioTest(); r == elicit.Failed {
			t.Errorf(l)
		} else if r == elicit.Skipped {
			t.Skipf(l)
		}
	})

	t.Run("Table Parameter", func(t *testing.T) {
		e.BeginScenarioTest("Table Parameter")

		e.RunStep("Step to run before each scenario")

		e.RunStep("This step takes a table parameter",
			[][]string{
				{"This", "Is", "A", "Table"},
				{"That", "is", "I", "agree"},
				{"that", "it", "is", "indeed"},
				{"a", "table", "as", "described"},
			},
		)

		if r, l := e.EndScenarioTest(); r == elicit.Failed {
			t.Errorf(l)
		} else if r == elicit.Skipped {
			t.Skipf(l)
		}
	})
}
